type Views {
}

type Profile {
  id: String!
}

type ProfileSegment {
}

type ProfileList {
}

type ProfileInterest {
}

type ProfilePrivacy {
}

type Context {
  id: String!
  segments : [Segment]
}

type Query {
}

type Predicate {
}

type Persona {
}

type Tracker {
}

type Client {
}

type Event {
  id: String!
  type: [EventTypes]!
}

enum EventType {
  PAGEVIEW
  CLICK
  FORMSUBMIT
  ETC
}

type Rule {
}

type RuleAction {
}

query EventById($id: ID!) {
  event(id: $id) {
    type
  }
}

query Events($id: ID!) {
  event(id: $id) {
    type
  }
}

mutation createEvent($trackerId: TrackerID!, $eventType: EventType!, $timeStamp: Date, $location: GeoPoint, $data: Something ) {
  createEvent(trackerId: $trackerId, type: $eventType) {
    location
    timestamp
    key
    value
  }
}

mutation collectEvent($trackerId: TrackerID!, $eventType: EventType!) {
  createEvent(episode: $ep, review: $review) {
    stars
    commentary
  }
}



